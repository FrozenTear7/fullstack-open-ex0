{"version":3,"sources":["components/Person.jsx","components/Persons.jsx","components/Filter.jsx","components/PersonForm.jsx","services/persons.js","components/Notification.jsx","components/App.jsx","index.jsx"],"names":["Person","person","personDeleteOnClick","name","number","onClick","Persons","persons","filterName","filter","toLowerCase","includes","map","key","id","Filter","filterOnChange","value","onChange","PersonForm","newName","newNumber","personOnSubmit","nameOnChange","numberOnChange","onSubmit","type","baseUrl","axios","get","newPerson","post","personId","delete","updatedPerson","console","log","put","Notification","errorMessage","message","className","isPositive","App","useState","setPersons","setNewName","setNewNumber","setFilterName","setErrorMessage","useEffect","personsService","then","response","data","catch","error","setErrorMessageTemp","setTimeout","e","target","preventDefault","personExists","find","window","confirm","personDelete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.01b05261.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Person = ({ person, personDeleteOnClick }) => {\r\n  return (\r\n    <div>\r\n      {person.name} {person.number}{\" \"}\r\n      <button onClick={() => personDeleteOnClick(person)}>delete</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Person;\r\n","import React from \"react\";\r\nimport Person from \"./Person\";\r\n\r\nconst Persons = ({ persons, filterName, personDeleteOnClick }) => (\r\n  <div>\r\n    {persons\r\n      .filter((person) =>\r\n        person.name.toLowerCase().includes(filterName.toLowerCase())\r\n      )\r\n      .map((person) => (\r\n        <Person\r\n          key={person.id}\r\n          person={person}\r\n          personDeleteOnClick={personDeleteOnClick}\r\n        />\r\n      ))}\r\n  </div>\r\n);\r\n\r\nexport default Persons;\r\n","import React from \"react\";\r\n\r\nconst Filter = ({ filterName, filterOnChange }) => (\r\n  <div>\r\n    filter shown with: <input value={filterName} onChange={filterOnChange} />\r\n  </div>\r\n);\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\n\r\nconst PersonForm = ({\r\n  newName,\r\n  newNumber,\r\n  personOnSubmit,\r\n  nameOnChange,\r\n  numberOnChange,\r\n}) => (\r\n  <form onSubmit={personOnSubmit}>\r\n    <div>\r\n      name: <input value={newName} onChange={nameOnChange} />\r\n    </div>\r\n    <div>\r\n      number: <input value={newNumber} onChange={numberOnChange} />\r\n    </div>\r\n    <div>\r\n      <button type=\"submit\">add</button>\r\n    </div>\r\n  </form>\r\n);\r\n\r\nexport default PersonForm;\r\n","import axios from \"axios\";\r\nconst baseUrl = \"/api/persons\";\r\n\r\nconst getAllPersons = () => {\r\n    return axios.get(baseUrl);\r\n};\r\n\r\nconst createPerson = (newPerson) => {\r\n    return axios.post(baseUrl, newPerson);\r\n};\r\n\r\nconst deletePerson = (personId) => {\r\n    return axios.delete(`${baseUrl}/${personId}`);\r\n};\r\n\r\nconst updatePerson = (updatedPerson) => {\r\n    console.log(updatedPerson);\r\n    return axios.put(`${baseUrl}/${updatedPerson.id}`, updatedPerson);\r\n};\r\n\r\nexport default {\r\n    getAllPersons,\r\n    createPerson,\r\n    deletePerson,\r\n    updatePerson,\r\n};","import React from \"react\";\r\n\r\nconst Notification = ({ errorMessage }) => {\r\n  if (!errorMessage || !errorMessage.message) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={`notification ${\r\n        errorMessage.isPositive ? \"success\" : \"error\"\r\n      }`}\r\n    >\r\n      {errorMessage.message}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Persons from \"./Persons\";\r\nimport Filter from \"./Filter\";\r\nimport PersonForm from \"./PersonForm\";\r\nimport personsService from \"../services/persons\";\r\nimport Notification from \"./Notification\";\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([]);\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [newNumber, setNewNumber] = useState(\"\");\r\n  const [filterName, setFilterName] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n\r\n  useEffect(() => {\r\n    personsService\r\n      .getAllPersons()\r\n      .then((response) => {\r\n        setPersons(response.data);\r\n      })\r\n      .catch((error) => {\r\n        setErrorMessageTemp({\r\n          message: `Could not fetch persons`,\r\n          isPositive: false,\r\n        });\r\n        console.log(\"Could not fetch persons\", error);\r\n      });\r\n  }, []);\r\n\r\n  const setErrorMessageTemp = (message) => {\r\n    setErrorMessage(message);\r\n    setTimeout(() => {\r\n      setErrorMessage(null);\r\n    }, 5000);\r\n  };\r\n\r\n  const nameOnChange = (e) => {\r\n    setNewName(e.target.value);\r\n  };\r\n\r\n  const numberOnChange = (e) => {\r\n    setNewNumber(e.target.value);\r\n  };\r\n\r\n  const filterOnChange = (e) => {\r\n    setFilterName(e.target.value);\r\n  };\r\n\r\n  const personOnSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const personExists = persons.find((person) => person.name === newName);\r\n\r\n    if (personExists) {\r\n      if (\r\n        window.confirm(`${newName} is already added to phonebook, \r\n      replace the old number with a new one?`)\r\n      ) {\r\n        const updatedPerson = { ...personExists, number: newNumber };\r\n\r\n        personsService\r\n          .updatePerson(updatedPerson)\r\n          .then(() => {\r\n            setPersons(\r\n              persons.map((person) => {\r\n                if (person.id === personExists.id) {\r\n                  return updatedPerson;\r\n                } else {\r\n                  return person;\r\n                }\r\n              })\r\n            );\r\n            setErrorMessageTemp({\r\n              message: `Successfully updated ${updatedPerson.name}'s number`,\r\n              isPositive: true,\r\n            });\r\n            setNewName(\"\");\r\n            setNewNumber(\"\");\r\n          })\r\n          .catch((error) => {\r\n            setErrorMessageTemp({\r\n              message: `Could not update ${personExists.name}'s number`,\r\n              isPositive: false,\r\n            });\r\n            console.log(\r\n              `Could not update ${personExists.name}'s number`,\r\n              error\r\n            );\r\n          });\r\n      }\r\n    } else {\r\n      personsService\r\n        .createPerson({ name: newName, number: newNumber })\r\n        .then((response) => {\r\n          setPersons([...persons, response.data]);\r\n          setErrorMessageTemp({\r\n            message: `Successfully create ${newName}'s number`,\r\n            isPositive: true,\r\n          });\r\n          setNewName(\"\");\r\n          setNewNumber(\"\");\r\n        })\r\n        .catch((error) => {\r\n          setErrorMessageTemp({\r\n            message: `Could not add ${newName}`,\r\n            isPositive: false,\r\n          });\r\n          console.log(`Could not add ${newName}`, error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const personDeleteOnClick = (personDelete) => {\r\n    if (window.confirm(`Delete ${personDelete.name}`)) {\r\n      personsService\r\n        .deletePerson(personDelete.id)\r\n        .then(() => {\r\n          setPersons(persons.filter((person) => person.id !== personDelete.id));\r\n          setErrorMessageTemp({\r\n            message: `Successfully deleted ${personDelete.name}`,\r\n            isPositive: true,\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          setErrorMessageTemp({\r\n            message: `Could not delete ${personDelete.name}`,\r\n            isPositive: false,\r\n          });\r\n          console.log(`Could not delete ${personDelete.name}`, error);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Phonebook</h1>\r\n      <Notification errorMessage={errorMessage} />\r\n      <Filter filterName={filterName} filterOnChange={filterOnChange} />\r\n      <h2>Add a new person</h2>\r\n      <PersonForm\r\n        newName={newName}\r\n        newNumber={newNumber}\r\n        personOnSubmit={personOnSubmit}\r\n        nameOnChange={nameOnChange}\r\n        numberOnChange={numberOnChange}\r\n      />\r\n\r\n      <h2>Numbers</h2>\r\n      <Persons\r\n        persons={persons}\r\n        filterName={filterName}\r\n        personDeleteOnClick={personDeleteOnClick}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}